version: '3.8'

networks:
  default:
    driver: bridge
  coolify:
    external: true

services:
  pid-issuer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pid-issuer
    ports:
      - "9090:8080"
    environment:
      # Authorization server configuration - use HTTP internally
      - ISSUER_AUTHORIZATIONSERVER_METADATA=http://keycloak:8080/idp/realms/pid-issuer-realm/.well-known/openid-configuration
      - ISSUER_AUTHORIZATIONSERVER_INTROSPECTION=http://keycloak:8080/idp/realms/pid-issuer-realm/protocol/openid-connect/token/introspect
      - ISSUER_KEYCLOAK_SERVER_URL=http://keycloak:8080/idp
      # Security credentials
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_OPAQUETOKEN_CLIENT_ID=pid-issuer-srv
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_OPAQUETOKEN_CLIENT_SECRET=zIKAV9DIIIaJCzHCVBPlySgU8KgY68U2
      # Keycloak admin credentials
      - ISSUER_KEYCLOAK_AUTHENTICATION_REALM=master
      - ISSUER_KEYCLOAK_CLIENT_ID=admin-cli
      - ISSUER_KEYCLOAK_USERNAME=admin
      - ISSUER_KEYCLOAK_PASSWORD=password
      - ISSUER_KEYCLOAK_USER_REALM=pid-issuer-realm
    networks:
      - default
      - coolify
    labels:
        - caddy.enable=true
        - caddy=issuer.authbound.io
        - caddy.handle=/pid-issuer/*
        - caddy.handle.reverse_proxy=pid-issuer:8080
        - caddy.handle.reverse_proxy.health_path=/pid-issuer/actuator/health
        - caddy.handle.reverse_proxy.health_interval=30s
        - caddy.handle=/.well-known/jwt-vc-issuer/pid-issuer
        - caddy.handle.respond={"issuer":"https://issuer.authbound.io/pid-issuer","jwks_uri":"https://issuer.authbound.io/pid-issuer/public_keys.jwks"}
        - caddy.handle.respond.status=200